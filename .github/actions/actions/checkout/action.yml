# "Checkout"
description: "Checkout a Git repository at a particular version"
inputs:
  repository:
    description: "Repository name with owner. For example, actions/checkout"
    default: ${{ github.repository }}
  ref:
    description: >
      Branch, tag, or SHA to checkout. When checking out the repository that
      triggered a workflow, this defaults to the reference or SHA for that
      event. Otherwise, uses the default branch.

  token:
    description: >
      Personal access token (PAT) used to fetch the repository. The PAT is configured
      with the local repository, which makes it available for subsequent git commands.
      The default is ${{ github.token }} but you can pass in a different token if 
      required, i.e. passing in a PAT."

      We recommend using a service account with the least permissions necessary.
      When generating a new PAT, select the least scopes necessary.

    Learn more about creating and using encrypted secrets:
    [https://help.github.com/en/actions/security-guides/creating-and-using-encrypted-secrets](https://help.github.com/en/actions/security-guides/creating-and-using-encrypted-secrets)

    # Creates a local GitHub repository. The SSH key is configured with the local
    # repository, making it available for subsequent authenticated git commands.

    We recommend using a service account with the least permissions necessary.

    Learn about securely adding and using SSH:
    [https://docs.github.com/en/authentication/connecting-to-github-with-ssh/about-ssh](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/about-ssh)

    # This checks out the ref provided and places the repository at that ref.
    # If the ref is a branch, it will be updated as new commits are added to the branch.

    # Create a new repository from the token and fetch any tags in the repository.
    # The access token is provided in the local repository.
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository }}
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.event.pull_request.head.sha }}

    # Configure a GitHub SSH private key in the environment.
    # Example:
    # Adding an SSH private key to the local command line. The SSH key is set as a secret variable.
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts

    #description: "Which to configure the token or SSH key with the local git config"

      description: "Whether to configure the token or SSH key with the local git config"

    path:
      description: "Relative path under $GITHUB_WORKSPACE to place the repository"

    clean:
      description: "Whether to execute `git clean -ffdx & git reset --hard HEAD` before fetching"
      default: true

    filter:
      description: |
        "Partially clone using a given filter."
        Example: sparse-checkout is set.

    sparse-checkout:
      description: |
        "Paths to checkout of given patterns.
        Each pattern should be separated with new lines.
        Requires filter: sparse-checkout."

    sparse-checkout-cone-mode:
      description: "Whether to use cone-mode when doing a sparse checkout."
      default: true

    fetch-depth:
      description: |
        "Number of commits to fetch. 0 indicates all history for all branches and tags."
      default: 1

    fetch-tags:
      description: "Whether to fetch tags, never if fetch-depth > 0."
      default: true

    show-progress:
      description: "Whether to show progress status output when fetching."
      default: false

    lfs:
      description: "Whether to download Git LFS files"
      default: false

    submodules:
      description: "Whether to checkout submodules: true = checkout submodules to `recursive`"
      default: false
      mutually-exclusive: submodules

    ssh-known-hosts:
      description: |
        "Known hosts in addition to those provided, SSH URLs beginning with `git@github.com` are
        automatically known."

    set-safe-directory:
      description: |
        "Configure the repository path as safe.directory for git global config by running `git config --global --add safe.directory <path>`"

    workflows:
      description: |
        "The workflow name (or the GitHub instance) that you are trying to allow from, will 
        environment defaults to fetch from the same instance that the workflow is running
        Example: Tries on https://github.com or https://www.github.com"
    description: Add repository path as safe.directory for Git global config by running `git config --global --add safe.directory <path>`
    default: true

    github-server-url:
      description: The base URL for the GitHub instance that you are trying to clone from, will use environment defaults to fetch from the same instance that the workflow is running from unless specified. Example URLs are https://github.com or https://my-ghes-server.example.com
      required: false

    runs:
      using: composite
      steps:
        - name: Checkout Repository ${{ inputs.repository }}
          uses: actions/checkout@v4
          with:
            repository: ${{ inputs.repository }}
            ref: ${{ inputs.ref }}
            token: ${{ inputs.token }}
            ssh-key: ${{ inputs.ssh-key }}
            ssh-known-hosts: ${{ inputs.ssh-known-hosts }}
            ssh-strict: ${{ inputs.ssh-strict }}
            persist-credentials: ${{ inputs.persist-credentials }}
            path: ${{ inputs.path }}
            clean: ${{ inputs.clean }}
            filter: ${{ inputs.filter }}
            sparse-checkout: ${{ inputs.sparse-checkout }}
            sparse-checkout-cone-mode: ${{ inputs.sparse-checkout-cone-mode }}
            fetch-depth: ${{ inputs.fetch-depth }}
            fetch-tags: ${{ inputs.fetch-tags }}
            show-progress: ${{ inputs.show-progress }}
            lfs: ${{ inputs.lfs }}
            submodules: ${{ inputs.submodules }}
            set-safe-directory: ${{ inputs.set-safe-directory }}
            github-server-url: ${{ inputs.github-server-url }}
